---
deployment:
  tasks:
    - set -euo pipefail

    - export REPO="/home/davidort/repositories/davidortega.dev"
    - export DEST="/home/davidort/public_html"

    # Solo master
    - cd "$REPO"
    - BRANCH="$(git rev-parse --abbrev-ref HEAD || echo HEAD)"
    - if [ "$BRANCH" != "master" ]; then echo "Skip deploy: $BRANCH != master"; exit 0; fi
    - echo "Deploy branch: $BRANCH  |  PWD: $(pwd)"

    # Instala deps y build prod
    - npm i --no-audit --no-fund
    - npx ng build --configuration=production

    # Detecta carpeta de salida (dist/<app>/browser si existe)
    - node -e 'const fs=require("fs");const p=require("./angular.json");const proj=p.defaultProject||Object.keys(p.projects)[0];const out=p.projects[proj].architect.build.options.outputPath;const dir=fs.existsSync(`${out}/browser`)?`${out}/browser`:out;process.stdout.write(dir);' > .deploy_dist
    - export SOURCE_DIR="$(cat .deploy_dist)"
    - echo "SOURCE_DIR=$SOURCE_DIR"

    # Sincroniza preservando ads.txt, .htaccess y .well-known/
    - /bin/mkdir -p "$DEST"
    - /bin/rsync -a --delete \
        --exclude="ads.txt" \
        --exclude=".htaccess" \
        --exclude=".well-known/**" \
        --exclude=".git*" \
        --chmod=D755,F644 \
        "$SOURCE_DIR"/ "$DEST"/

    # Permisos (opcional)
    - /bin/find "$DEST" -type d -exec chmod 755 {} \;
    - /bin/find "$DEST" -type f -exec chmod 644 {} \;

    - echo "✅ Deploy OK → $DEST (preservando ads.txt, .htaccess y .well-known/)"
